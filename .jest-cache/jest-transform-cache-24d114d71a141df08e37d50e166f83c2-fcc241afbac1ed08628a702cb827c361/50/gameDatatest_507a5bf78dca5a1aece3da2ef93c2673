1ef0098f85df0880e39d6132b7425c49
"use strict";

var _gameData = require("../../constants/gameData");
describe('Game Data Constants', () => {
  describe('happyBirthdayNotes', () => {
    it('should contain the correct number of notes', () => {
      expect(_gameData.happyBirthdayNotes).toHaveLength(12);
    });
    it('should have correct note structure', () => {
      _gameData.happyBirthdayNotes.forEach(note => {
        expect(note).toHaveProperty('note');
        expect(note).toHaveProperty('frequency');
        expect(note).toHaveProperty('duration');
        expect(typeof note.note).toBe('string');
        expect(typeof note.frequency).toBe('number');
        expect(typeof note.duration).toBe('number');
      });
    });
    it('should have valid frequencies', () => {
      _gameData.happyBirthdayNotes.forEach(note => {
        expect(note.frequency).toBeGreaterThan(0);
        expect(note.frequency).toBeLessThan(2000); // Reasonable frequency range
      });
    });
    it('should have valid durations', () => {
      _gameData.happyBirthdayNotes.forEach(note => {
        expect(note.duration).toBeGreaterThan(0);
        expect(note.duration).toBeLessThan(5000); // Reasonable duration range
      });
    });
  });
  describe('poems', () => {
    it('should contain poems', () => {
      expect(_gameData.poems).toBeDefined();
      expect(Array.isArray(_gameData.poems)).toBe(true);
      expect(_gameData.poems.length).toBeGreaterThan(0);
    });
    it('should have valid poem strings', () => {
      _gameData.poems.forEach(poem => {
        expect(typeof poem).toBe('string');
        expect(poem.length).toBeGreaterThan(0);
      });
    });
  });
  describe('specialPoem', () => {
    it('should be a valid string', () => {
      expect(typeof _gameData.specialPoem).toBe('string');
      expect(_gameData.specialPoem.length).toBeGreaterThan(0);
    });
  });
  describe('targetDate', () => {
    it('should be a valid Date object', () => {
      expect(_gameData.targetDate).toBeInstanceOf(Date);
      expect(_gameData.targetDate.getTime()).toBeGreaterThan(0);
    });
  });
  describe('GAME_CONFIG', () => {
    it('should contain all required configuration properties', () => {
      expect(_gameData.GAME_CONFIG).toHaveProperty('INITIAL_LIVES');
      expect(_gameData.GAME_CONFIG).toHaveProperty('MAX_LIVES');
      expect(_gameData.GAME_CONFIG).toHaveProperty('BASE_TILE_SPEED');
      expect(_gameData.GAME_CONFIG).toHaveProperty('BASE_SPAWN_INTERVAL');
      expect(_gameData.GAME_CONFIG).toHaveProperty('MIN_SPAWN_INTERVAL');
      expect(_gameData.GAME_CONFIG).toHaveProperty('POWER_UP_SPAWN_CHANCE');
      expect(_gameData.GAME_CONFIG).toHaveProperty('COMBO_BONUS_INTERVAL');
      expect(_gameData.GAME_CONFIG).toHaveProperty('MAX_SIMULTANEOUS_NOTES');
      expect(_gameData.GAME_CONFIG).toHaveProperty('GAME_LOOP_INTERVAL');
      expect(_gameData.GAME_CONFIG).toHaveProperty('DANGER_ZONE_HEIGHT');
    });
    it('should have valid numeric values', () => {
      Object.values(_gameData.GAME_CONFIG).forEach(value => {
        expect(typeof value).toBe('number');
        expect(value).toBeGreaterThan(0);
      });
    });
    it('should have reasonable game configuration values', () => {
      expect(_gameData.GAME_CONFIG.INITIAL_LIVES).toBeGreaterThan(0);
      expect(_gameData.GAME_CONFIG.MAX_LIVES).toBeGreaterThan(_gameData.GAME_CONFIG.INITIAL_LIVES);
      expect(_gameData.GAME_CONFIG.POWER_UP_SPAWN_CHANCE).toBeGreaterThan(0);
      expect(_gameData.GAME_CONFIG.POWER_UP_SPAWN_CHANCE).toBeLessThan(1);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,