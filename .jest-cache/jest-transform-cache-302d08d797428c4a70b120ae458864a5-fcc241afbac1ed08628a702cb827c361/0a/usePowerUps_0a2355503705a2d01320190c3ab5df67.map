{"version":3,"names":["cov_imei0xla4","actualCoverage","useState","useCallback","useEffect","s","usePowerUps","f","powerUps","setPowerUps","activePowerUps","setActivePowerUps","invincible","active","timeLeft","slowMotion","scoreMultiplier","multiplier","powerUpTypes","heart","emoji","color","effect","star","lightning","rainbow","golden","interval","setInterval","prev","updated","Object","keys","forEach","key","b","clearInterval","spawnPowerUp","Math","random","types","randomType","floor","length","newPowerUp","id","Date","now","type","column","y","speed","collectPowerUp","powerUpId","onLifeRestore","onPlayNote","filter","p","min","error","console","log","updatePowerUpPositions","map","powerUp","resetPowerUps"],"sources":["usePowerUps.js"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\r\n\r\nexport const usePowerUps = () => {\r\n  const [powerUps, setPowerUps] = useState([]);\r\n  const [activePowerUps, setActivePowerUps] = useState({\r\n    invincible: { active: false, timeLeft: 0 },\r\n    slowMotion: { active: false, timeLeft: 0 },\r\n    scoreMultiplier: { active: false, timeLeft: 0, multiplier: 1 }\r\n  });\r\n\r\n  // Power-up types configuration\r\n  const powerUpTypes = {\r\n    heart: { emoji: '💖', color: 'from-red-400 to-pink-500', effect: 'Restore Life' },\r\n    star: { emoji: '⭐', color: 'from-yellow-400 to-orange-500', effect: 'Invincible' },\r\n    lightning: { emoji: '⚡', color: 'from-blue-400 to-purple-500', effect: 'Slow Motion' },\r\n    rainbow: { emoji: '🌈', color: 'from-purple-400 to-pink-500', effect: 'Double Points' },\r\n    golden: { emoji: '✨', color: 'from-yellow-300 to-yellow-600', effect: '3x Multiplier' }\r\n  };\r\n\r\n  // Update active power-ups timer\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setActivePowerUps(prev => {\r\n        const updated = { ...prev };\r\n        Object.keys(updated).forEach(key => {\r\n          if (updated[key].active && updated[key].timeLeft > 0) {\r\n            updated[key].timeLeft -= 100;\r\n            if (updated[key].timeLeft <= 0) {\r\n              updated[key].active = false;\r\n              if (key === 'scoreMultiplier') {\r\n                updated[key].multiplier = 1;\r\n              }\r\n            }\r\n          }\r\n        });\r\n        return updated;\r\n      });\r\n    }, 100);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Spawn power-ups randomly\r\n  const spawnPowerUp = useCallback(() => {\r\n    if (Math.random() < 0.15) { // 15% chance to spawn power-up\r\n      const types = Object.keys(powerUpTypes);\r\n      const randomType = types[Math.floor(Math.random() * types.length)];\r\n      \r\n      const newPowerUp = {\r\n        id: Date.now() + Math.random(),\r\n        type: randomType,\r\n        column: Math.floor(Math.random() * 4),\r\n        y: -80,\r\n        speed: 3\r\n      };\r\n      \r\n      setPowerUps(prev => [...prev, newPowerUp]);\r\n    }\r\n  }, [powerUpTypes]);\r\n\r\n  // Handle power-up collection\r\n  const collectPowerUp = useCallback((powerUpId, type, onLifeRestore, onPlayNote) => {\r\n    setPowerUps(prev => prev.filter(p => p.id !== powerUpId));\r\n    \r\n    switch (type) {\r\n      case 'heart':\r\n        onLifeRestore(prev => Math.min(prev + 1, 5)); // Max 5 lives\r\n        break;\r\n      case 'star':\r\n        setActivePowerUps(prev => ({\r\n          ...prev,\r\n          invincible: { active: true, timeLeft: 5000 }\r\n        }));\r\n        break;\r\n      case 'lightning':\r\n        setActivePowerUps(prev => ({\r\n          ...prev,\r\n          slowMotion: { active: true, timeLeft: 8000 }\r\n        }));\r\n        break;\r\n      case 'rainbow':\r\n        setActivePowerUps(prev => ({\r\n          ...prev,\r\n          scoreMultiplier: { active: true, timeLeft: 10000, multiplier: 2 }\r\n        }));\r\n        break;\r\n      case 'golden':\r\n        setActivePowerUps(prev => ({\r\n          ...prev,\r\n          scoreMultiplier: { active: true, timeLeft: 8000, multiplier: 3 }\r\n        }));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    \r\n    // Play collection sound\r\n    try {\r\n      onPlayNote(523.25, 200); // High C\r\n    } catch (error) {\r\n      console.log('Audio playback failed:', error);\r\n    }\r\n  }, []);\r\n\r\n  // Update power-up positions\r\n  const updatePowerUpPositions = useCallback(() => {\r\n    setPowerUps(prev => prev.map(powerUp => ({\r\n      ...powerUp,\r\n      y: powerUp.y + powerUp.speed\r\n    })).filter(powerUp => powerUp.y < 500)); // Remove power-ups that fall off screen\r\n  }, []);\r\n\r\n  // Reset power-ups\r\n  const resetPowerUps = useCallback(() => {\r\n    setPowerUps([]);\r\n    setActivePowerUps({\r\n      invincible: { active: false, timeLeft: 0 },\r\n      slowMotion: { active: false, timeLeft: 0 },\r\n      scoreMultiplier: { active: false, timeLeft: 0, multiplier: 1 }\r\n    });\r\n  }, []);\r\n\r\n  return {\r\n    powerUps,\r\n    activePowerUps,\r\n    powerUpTypes,\r\n    spawnPowerUp,\r\n    collectPowerUp,\r\n    updatePowerUpPositions,\r\n    resetPowerUps\r\n  };\r\n};\r\n"],"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","ignoreList":[]}