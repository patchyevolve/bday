{"version":3,"names":["cov_n5t2ul8oh","actualCoverage","s","loadMediaFiles","f","pictures","videos","knownPictures","forEach","filename","i","push","id","url","alt","console","log","error","exports","addNewMediaFile","type","Date","now","Math","random","b"],"sources":["mediaLoader.js"],"sourcesContent":["// Utility to load only actual media files that exist\nexport const loadMediaFiles = async () => {\n  try {\n    const pictures = [];\n    const videos = [];\n    \n    // Add all known pictures directly - they exist in the folder\n    const knownPictures = [\n      '1000019084.jpg',\n      '1000019108.jpg',\n      '1000021998.jpg',\n      '1000022003.jpg',\n      '1000022083.jpg',\n      '1000022097.jpg',\n      '1000022105.jpg',\n      '1000022107.jpg',\n      '1000023294.jpg',\n      '1000023324.jpg',\n      '1000030195.jpg',\n      '1000035734.jpg',\n      '1000039421.webp',\n      'IMG_20240825_142128.jpg',\n      'IMG_20240825_211740.jpg',\n      'IMG_20241027_150603.jpg',\n      'IMG_20241027_150639.jpg',\n      'IMG_20241027_151413.jpg',\n      'IMG_20241027_162807.jpg',\n      'IMG_20241027_183632.jpg',\n      'IMG_20241027_184031.jpg',\n      'IMG_20241222_101359.jpg',\n      'IMG_20241222_101618.jpg',\n      'IMG_20241222_140150.jpg',\n      'IMG_20241229_232452.jpg',\n      'IMG_20241229_233514.jpg',\n      'IMG_20250209_220050.jpg',\n      'IMG_20250223_160858.jpg',\n      'IMG_20250223_163017.jpg',\n      'IMG_20250316_133255.jpg',\n      'IMG_20250316_142946-COLLAGE.jpg',\n      'IMG_20250316_142950.jpg',\n      'IMG_20250316_142959.jpg',\n      'IMG_20250316_143006.jpg',\n      'IMG_20250316_143019.jpg',\n      'IMG_20250316_171434.jpg',\n      'IMG_20250316_171440_1.jpg',\n      'IMG_20250316_171820.jpg',\n      'IMG_20250316_171828.jpg',\n      'IMG_8263 (1).JPG'\n    ];\n    \n    // Add pictures directly without HEAD check since files exist\n    knownPictures.forEach((filename, i) => {\n      pictures.push({\n        id: i + 1,\n        url: `/media/pictures/${filename}`,\n        alt: `Memory ${i + 1}`,\n        filename: filename\n      });\n    });\n    \n    // Add the video directly since it exists\n    videos.push({\n      id: 1,\n      url: '/media/videos/Screen Recording 2025-08-01 001257.mp4',\n      alt: 'Video 1',\n      filename: 'Screen Recording 2025-08-01 001257.mp4'\n    });\n    \n    console.log('Media loader returning:', { pictures, videos });\n    return { pictures, videos };\n  } catch (error) {\n    console.error('Error loading media files:', error);\n    // Return empty arrays if there's an error\n    return { pictures: [], videos: [] };\n  }\n};\n\n// Function to add new files manually (for future use)\nexport const addNewMediaFile = (type, filename, alt) => {\n  const url = `/media/${type}/${filename}`;\n  return {\n    id: Date.now() + Math.random(),\n    url: url,\n    alt: alt || filename,\n    filename: filename\n  };\n};\n"],"mappings":"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","ignoreList":[]}