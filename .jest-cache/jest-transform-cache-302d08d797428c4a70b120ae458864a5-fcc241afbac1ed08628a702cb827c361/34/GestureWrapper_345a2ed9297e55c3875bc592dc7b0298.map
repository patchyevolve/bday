{"version":3,"names":["cov_1lxplemimj","actualCoverage","React","motion","useMotionValue","useTransform","jsx","_jsx","jsxs","_jsxs","s","GestureWrapper","children","onSwipeRight","f","x","opacity","handleDragEnd","event","offset","b","div","drag","dragConstraints","left","right","dragElastic","onDragEnd","style","className","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d"],"sources":["GestureWrapper.js"],"sourcesContent":["import React from 'react';\r\nimport { motion, useMotionValue, useTransform } from 'framer-motion';\r\n\r\nconst GestureWrapper = ({ children, onSwipeRight }) => {\r\n  const x = useMotionValue(0);\r\n  const opacity = useTransform(x, [-100, 0, 100], [0.5, 1, 0.5]);\r\n  \r\n  const handleDragEnd = (event, { offset }) => {\r\n    if (offset.x > 100) { // Swipe right threshold\r\n      onSwipeRight();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      drag=\"x\"\r\n      dragConstraints={{ left: 0, right: 0 }}\r\n      dragElastic={0.2}\r\n      onDragEnd={handleDragEnd}\r\n      style={{ x, opacity }}\r\n      className=\"relative\"\r\n    >\r\n      {children}\r\n      <motion.div\r\n        className=\"fixed top-1/2 right-8 transform -translate-y-1/2 text-white/50 pointer-events-none\"\r\n        style={{ opacity: useTransform(x, [0, 50], [0, 1]) }}\r\n      >\r\n        <svg\r\n          className=\"w-12 h-12\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          viewBox=\"0 0 24 24\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth={2}\r\n            d=\"M9 5l7 7-7 7\"\r\n          />\r\n        </svg>\r\n        <span className=\"text-sm\">Slideshow</span>\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default GestureWrapper;\r\n"],"mappings":"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","ignoreList":[]}