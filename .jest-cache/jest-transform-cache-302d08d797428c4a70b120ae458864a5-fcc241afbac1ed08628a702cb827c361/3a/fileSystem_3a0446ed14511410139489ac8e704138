c55f4f3b79c6876fcb24a3a34aeca4ab
/* istanbul ignore next */
function cov_2be4mjf9yw() {
  var path = "D:\\pianoTiles\\birthday-piano-app\\src\\utils\\fileSystem.js";
  var hash = "021d40b3e949aef2e160a7b0b770c1218bbc5650";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\pianoTiles\\birthday-piano-app\\src\\utils\\fileSystem.js",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 17
        },
        end: {
          line: 10,
          column: 39
        }
      },
      "1": {
        start: {
          line: 12,
          column: 34
        },
        end: {
          line: 21,
          column: 1
        }
      },
      "2": {
        start: {
          line: 13,
          column: 2
        },
        end: {
          line: 20,
          column: 3
        }
      },
      "3": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 75
        }
      },
      "4": {
        start: {
          line: 15,
          column: 17
        },
        end: {
          line: 15,
          column: 38
        }
      },
      "5": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 28
        }
      },
      "6": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 60
        }
      },
      "7": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 14
        }
      },
      "8": {
        start: {
          line: 23,
          column: 27
        },
        end: {
          line: 39,
          column: 1
        }
      },
      "9": {
        start: {
          line: 24,
          column: 2
        },
        end: {
          line: 38,
          column: 3
        }
      },
      "10": {
        start: {
          line: 25,
          column: 21
        },
        end: {
          line: 25,
          column: 35
        }
      },
      "11": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 34
        }
      },
      "12": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 34
        }
      },
      "13": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 32,
          column: 6
        }
      },
      "14": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 33
        }
      },
      "15": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 51
        }
      },
      "16": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 46
        }
      },
      "17": {
        start: {
          line: 41,
          column: 27
        },
        end: {
          line: 56,
          column: 1
        }
      },
      "18": {
        start: {
          line: 42,
          column: 2
        },
        end: {
          line: 55,
          column: 3
        }
      },
      "19": {
        start: {
          line: 43,
          column: 21
        },
        end: {
          line: 49,
          column: 6
        }
      },
      "20": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 33
        }
      },
      "21": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 50
        }
      },
      "22": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 46
        }
      },
      "23": {
        start: {
          line: 58,
          column: 32
        },
        end: {
          line: 85,
          column: 1
        }
      },
      "24": {
        start: {
          line: 59,
          column: 13
        },
        end: {
          line: 59,
          column: 21
        }
      },
      "25": {
        start: {
          line: 60,
          column: 14
        },
        end: {
          line: 60,
          column: 39
        }
      },
      "26": {
        start: {
          line: 65,
          column: 2
        },
        end: {
          line: 73,
          column: 3
        }
      },
      "27": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 48
        }
      },
      "28": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 20
        }
      },
      "29": {
        start: {
          line: 68,
          column: 9
        },
        end: {
          line: 73,
          column: 3
        }
      },
      "30": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 48
        }
      },
      "31": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 51
        }
      },
      "32": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 41
        }
      },
      "33": {
        start: {
          line: 75,
          column: 2
        },
        end: {
          line: 84,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 12,
            column: 34
          },
          end: {
            line: 12,
            column: 35
          }
        },
        loc: {
          start: {
            line: 12,
            column: 50
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 12
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 27
          },
          end: {
            line: 23,
            column: 28
          }
        },
        loc: {
          start: {
            line: 23,
            column: 49
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 41,
            column: 27
          },
          end: {
            line: 41,
            column: 28
          }
        },
        loc: {
          start: {
            line: 41,
            column: 53
          },
          end: {
            line: 56,
            column: 1
          }
        },
        line: 41
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 58,
            column: 32
          },
          end: {
            line: 58,
            column: 33
          }
        },
        loc: {
          start: {
            line: 58,
            column: 54
          },
          end: {
            line: 85,
            column: 1
          }
        },
        line: 58
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 16,
            column: 27
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 16,
            column: 21
          }
        }, {
          start: {
            line: 16,
            column: 25
          },
          end: {
            line: 16,
            column: 27
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 65,
            column: 2
          },
          end: {
            line: 73,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 2
          },
          end: {
            line: 73,
            column: 3
          }
        }, {
          start: {
            line: 68,
            column: 9
          },
          end: {
            line: 73,
            column: 3
          }
        }],
        line: 65
      },
      "2": {
        loc: {
          start: {
            line: 65,
            column: 6
          },
          end: {
            line: 65,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 6
          },
          end: {
            line: 65,
            column: 25
          }
        }, {
          start: {
            line: 65,
            column: 29
          },
          end: {
            line: 65,
            column: 51
          }
        }],
        line: 65
      },
      "3": {
        loc: {
          start: {
            line: 68,
            column: 9
          },
          end: {
            line: 73,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 9
          },
          end: {
            line: 73,
            column: 3
          }
        }, {
          start: {
            line: 71,
            column: 9
          },
          end: {
            line: 73,
            column: 3
          }
        }],
        line: 68
      },
      "4": {
        loc: {
          start: {
            line: 68,
            column: 13
          },
          end: {
            line: 68,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 13
          },
          end: {
            line: 68,
            column: 30
          }
        }, {
          start: {
            line: 68,
            column: 34
          },
          end: {
            line: 68,
            column: 56
          }
        }],
        line: 68
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "021d40b3e949aef2e160a7b0b770c1218bbc5650"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2be4mjf9yw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2be4mjf9yw();
import { v4 as uuidv4 } from 'uuid';
import { getImageDimensions, getVideoDimensions, generateVideoThumbnail, isValidImageFile, isValidVideoFile } from './mediaUtils';
const BASE_URL =
/* istanbul ignore next */
(cov_2be4mjf9yw().s[0]++, process.env.PUBLIC_URL);
/* istanbul ignore next */
cov_2be4mjf9yw().s[1]++;
export const scanMediaDirectory = async type => {
  /* istanbul ignore next */
  cov_2be4mjf9yw().f[0]++;
  cov_2be4mjf9yw().s[2]++;
  try {
    const response =
    /* istanbul ignore next */
    (cov_2be4mjf9yw().s[3]++, await fetch(`${BASE_URL}/api/scan-media?type=${type}`));
    const data =
    /* istanbul ignore next */
    (cov_2be4mjf9yw().s[4]++, await response.json());
    /* istanbul ignore next */
    cov_2be4mjf9yw().s[5]++;
    return /* istanbul ignore next */(cov_2be4mjf9yw().b[0][0]++, data.files) ||
    /* istanbul ignore next */
    (cov_2be4mjf9yw().b[0][1]++, []);
  } catch (error) {
    /* istanbul ignore next */
    cov_2be4mjf9yw().s[6]++;
    console.error('Error scanning media directory:', error);
    /* istanbul ignore next */
    cov_2be4mjf9yw().s[7]++;
    return [];
  }
};
/* istanbul ignore next */
cov_2be4mjf9yw().s[8]++;
export const uploadMedia = async (file, type) => {
  /* istanbul ignore next */
  cov_2be4mjf9yw().f[1]++;
  cov_2be4mjf9yw().s[9]++;
  try {
    const formData =
    /* istanbul ignore next */
    (cov_2be4mjf9yw().s[10]++, new FormData());
    /* istanbul ignore next */
    cov_2be4mjf9yw().s[11]++;
    formData.append('file', file);
    /* istanbul ignore next */
    cov_2be4mjf9yw().s[12]++;
    formData.append('type', type);
    const response =
    /* istanbul ignore next */
    (cov_2be4mjf9yw().s[13]++, await fetch(`${BASE_URL}/api/upload-media`, {
      method: 'POST',
      body: formData
    }));
    /* istanbul ignore next */
    cov_2be4mjf9yw().s[14]++;
    return await response.json();
  } catch (error) {
    /* istanbul ignore next */
    cov_2be4mjf9yw().s[15]++;
    console.error('Error uploading media:', error);
    /* istanbul ignore next */
    cov_2be4mjf9yw().s[16]++;
    throw new Error('Failed to upload media');
  }
};
/* istanbul ignore next */
cov_2be4mjf9yw().s[17]++;
export const deleteMedia = async (filename, type) => {
  /* istanbul ignore next */
  cov_2be4mjf9yw().f[2]++;
  cov_2be4mjf9yw().s[18]++;
  try {
    const response =
    /* istanbul ignore next */
    (cov_2be4mjf9yw().s[19]++, await fetch(`${BASE_URL}/api/delete-media`, {
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        filename,
        type
      })
    }));
    /* istanbul ignore next */
    cov_2be4mjf9yw().s[20]++;
    return await response.json();
  } catch (error) {
    /* istanbul ignore next */
    cov_2be4mjf9yw().s[21]++;
    console.error('Error deleting media:', error);
    /* istanbul ignore next */
    cov_2be4mjf9yw().s[22]++;
    throw new Error('Failed to delete media');
  }
};
/* istanbul ignore next */
cov_2be4mjf9yw().s[23]++;
export const processMediaFile = async (file, type) => {
  /* istanbul ignore next */
  cov_2be4mjf9yw().f[3]++;
  const id =
  /* istanbul ignore next */
  (cov_2be4mjf9yw().s[24]++, uuidv4());
  const url =
  /* istanbul ignore next */
  (cov_2be4mjf9yw().s[25]++, URL.createObjectURL(file));
  let dimensions;
  let thumbnail;
  /* istanbul ignore next */
  cov_2be4mjf9yw().s[26]++;
  if (
  /* istanbul ignore next */
  (cov_2be4mjf9yw().b[2][0]++, type === 'pictures') &&
  /* istanbul ignore next */
  (cov_2be4mjf9yw().b[2][1]++, isValidImageFile(file))) {
    /* istanbul ignore next */
    cov_2be4mjf9yw().b[1][0]++;
    cov_2be4mjf9yw().s[27]++;
    dimensions = await getImageDimensions(file);
    /* istanbul ignore next */
    cov_2be4mjf9yw().s[28]++;
    thumbnail = url;
  } else {
    /* istanbul ignore next */
    cov_2be4mjf9yw().b[1][1]++;
    cov_2be4mjf9yw().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_2be4mjf9yw().b[4][0]++, type === 'videos') &&
    /* istanbul ignore next */
    (cov_2be4mjf9yw().b[4][1]++, isValidVideoFile(file))) {
      /* istanbul ignore next */
      cov_2be4mjf9yw().b[3][0]++;
      cov_2be4mjf9yw().s[30]++;
      dimensions = await getVideoDimensions(file);
      /* istanbul ignore next */
      cov_2be4mjf9yw().s[31]++;
      thumbnail = await generateVideoThumbnail(file);
    } else {
      /* istanbul ignore next */
      cov_2be4mjf9yw().b[3][1]++;
      cov_2be4mjf9yw().s[32]++;
      throw new Error('Invalid file type');
    }
  }
  /* istanbul ignore next */
  cov_2be4mjf9yw().s[33]++;
  return {
    id,
    url,
    thumbnail,
    name: file.name,
    type,
    size: file.size,
    lastModified: file.lastModified,
    ...dimensions
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,