{"version":3,"names":["cov_2i91n94o49","actualCoverage","useState","useCallback","useEffect","s","useErrorHandling","f","error","setError","isLoading","setIsLoading","retryCount","setRetryCount","ERROR_TYPES","AUDIO_ERROR","NETWORK_ERROR","GAME_ERROR","UNKNOWN_ERROR","handleError","type","b","console","errorInfo","message","getErrorMessage","timestamp","Date","toISOString","setTimeout","prev","clearError","retry","retryFn","err","setLoading","loading","handleErrorBoundary","errorData","componentStack","timer","clearTimeout"],"sources":["useErrorHandling.js"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\r\n\r\nexport const useErrorHandling = () => {\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [retryCount, setRetryCount] = useState(0);\r\n\r\n  // Error types\r\n  const ERROR_TYPES = {\r\n    AUDIO_ERROR: 'AUDIO_ERROR',\r\n    NETWORK_ERROR: 'NETWORK_ERROR',\r\n    GAME_ERROR: 'GAME_ERROR',\r\n    UNKNOWN_ERROR: 'UNKNOWN_ERROR'\r\n  };\r\n\r\n  // Handle different types of errors\r\n  const handleError = useCallback((error, type = ERROR_TYPES.UNKNOWN_ERROR) => {\r\n    console.error(`[${type}]`, error);\r\n    \r\n    const errorInfo = {\r\n      type,\r\n      message: getErrorMessage(error, type),\r\n      timestamp: new Date().toISOString(),\r\n      retryCount\r\n    };\r\n\r\n    setError(errorInfo);\r\n\r\n    // Auto-retry for certain error types\r\n    if (type === ERROR_TYPES.AUDIO_ERROR && retryCount < 3) {\r\n      setTimeout(() => {\r\n        setRetryCount(prev => prev + 1);\r\n        setError(null);\r\n      }, 2000);\r\n    }\r\n  }, [retryCount]);\r\n\r\n  // Get user-friendly error messages\r\n  const getErrorMessage = (error, type) => {\r\n    switch (type) {\r\n      case ERROR_TYPES.AUDIO_ERROR:\r\n        return \"There was an issue with the audio system. Please try refreshing the page.\";\r\n      case ERROR_TYPES.NETWORK_ERROR:\r\n        return \"Network connection issue. Please check your internet connection.\";\r\n      case ERROR_TYPES.GAME_ERROR:\r\n        return \"Game encountered an error. Please try again.\";\r\n      default:\r\n        return error?.message || \"Something went wrong. Please try again.\";\r\n    }\r\n  };\r\n\r\n  // Clear error\r\n  const clearError = useCallback(() => {\r\n    setError(null);\r\n    setRetryCount(0);\r\n  }, []);\r\n\r\n  // Retry function\r\n  const retry = useCallback((retryFn) => {\r\n    if (retryFn && typeof retryFn === 'function') {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      \r\n      try {\r\n        retryFn();\r\n      } catch (err) {\r\n        handleError(err, ERROR_TYPES.UNKNOWN_ERROR);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  }, [handleError]);\r\n\r\n  // Loading state management\r\n  const setLoading = useCallback((loading) => {\r\n    setIsLoading(loading);\r\n  }, []);\r\n\r\n  // Error boundary handler\r\n  const handleErrorBoundary = useCallback((error, errorInfo) => {\r\n    console.error('Error Boundary caught an error:', error, errorInfo);\r\n    \r\n    const errorData = {\r\n      type: ERROR_TYPES.UNKNOWN_ERROR,\r\n      message: \"The app encountered an unexpected error. Please refresh the page.\",\r\n      timestamp: new Date().toISOString(),\r\n      componentStack: errorInfo.componentStack,\r\n      retryCount: 0\r\n    };\r\n\r\n    setError(errorData);\r\n  }, []);\r\n\r\n  // Auto-clear errors after timeout\r\n  useEffect(() => {\r\n    if (error && error.type !== ERROR_TYPES.AUDIO_ERROR) {\r\n      const timer = setTimeout(() => {\r\n        clearError();\r\n      }, 10000); // Auto-clear after 10 seconds\r\n\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [error, clearError]);\r\n\r\n  return {\r\n    error,\r\n    isLoading,\r\n    retryCount,\r\n    ERROR_TYPES,\r\n    handleError,\r\n    clearError,\r\n    retry,\r\n    setLoading,\r\n    handleErrorBoundary\r\n  };\r\n};\r\n"],"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","ignoreList":[]}