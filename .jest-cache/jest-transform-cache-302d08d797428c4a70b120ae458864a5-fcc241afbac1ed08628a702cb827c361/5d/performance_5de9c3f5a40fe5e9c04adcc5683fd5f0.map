{"version":3,"names":["cov_2dlyrk93xg","actualCoverage","s","debounce","func","wait","f","timeout","executedFunction","args","later","clearTimeout","setTimeout","exports","throttle","limit","inThrottle","arguments","context","b","apply","memoize","fn","cache","Map","key","JSON","stringify","has","get","result","set","supportsHardwareAcceleration","canvas","document","createElement","gl","getContext","getDevicePerformanceTier","debugInfo","getExtension","renderer","getParameter","UNMASKED_RENDERER_WEBGL","includes","navigator","deviceMemory","getOptimizedAnimationSettings","performanceTier","maxFloatingElements","animationQuality","enableParticles","enableShadows","preloadResources","window","AudioContext","audioContext","webkitAudioContext","suspend","createMemoryManager","maxCacheSize","value","size","firstKey","keys","next","delete","clear"],"sources":["performance.js"],"sourcesContent":["// Performance optimization utilities\r\n\r\n// Debounce function to limit function calls\r\nexport const debounce = (func, wait) => {\r\n  let timeout;\r\n  return function executedFunction(...args) {\r\n    const later = () => {\r\n      clearTimeout(timeout);\r\n      func(...args);\r\n    };\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n  };\r\n};\r\n\r\n// Throttle function to limit function calls\r\nexport const throttle = (func, limit) => {\r\n  let inThrottle;\r\n  return function() {\r\n    const args = arguments;\r\n    const context = this;\r\n    if (!inThrottle) {\r\n      func.apply(context, args);\r\n      inThrottle = true;\r\n      setTimeout(() => inThrottle = false, limit);\r\n    }\r\n  };\r\n};\r\n\r\n// Memoize expensive calculations\r\nexport const memoize = (fn) => {\r\n  const cache = new Map();\r\n  return (...args) => {\r\n    const key = JSON.stringify(args);\r\n    if (cache.has(key)) {\r\n      return cache.get(key);\r\n    }\r\n    const result = fn(...args);\r\n    cache.set(key, result);\r\n    return result;\r\n  };\r\n};\r\n\r\n// Check if device supports hardware acceleration\r\nexport const supportsHardwareAcceleration = () => {\r\n  const canvas = document.createElement('canvas');\r\n  const gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\r\n  return !!gl;\r\n};\r\n\r\n// Get device performance tier\r\nexport const getDevicePerformanceTier = () => {\r\n  const canvas = document.createElement('canvas');\r\n  const gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\r\n  \r\n  if (!gl) return 'low';\r\n  \r\n  const debugInfo = gl.getExtension('WEBGL_debug_renderer_info');\r\n  if (debugInfo) {\r\n    const renderer = gl.getParameter(debugInfo.UNMASKED_RENDERER_WEBGL);\r\n    // Check for high-end GPUs\r\n    if (renderer.includes('NVIDIA') || renderer.includes('AMD') || renderer.includes('Intel Iris')) {\r\n      return 'high';\r\n    }\r\n  }\r\n  \r\n  // Check memory\r\n  if (navigator.deviceMemory && navigator.deviceMemory >= 4) {\r\n    return 'medium';\r\n  }\r\n  \r\n  return 'low';\r\n};\r\n\r\n// Optimize animations based on device performance\r\nexport const getOptimizedAnimationSettings = () => {\r\n  const performanceTier = getDevicePerformanceTier();\r\n  \r\n  switch (performanceTier) {\r\n    case 'high':\r\n      return {\r\n        maxFloatingElements: 24,\r\n        animationQuality: 'high',\r\n        enableParticles: true,\r\n        enableShadows: true\r\n      };\r\n    case 'medium':\r\n      return {\r\n        maxFloatingElements: 16,\r\n        animationQuality: 'medium',\r\n        enableParticles: true,\r\n        enableShadows: false\r\n      };\r\n    case 'low':\r\n    default:\r\n      return {\r\n        maxFloatingElements: 8,\r\n        animationQuality: 'low',\r\n        enableParticles: false,\r\n        enableShadows: false\r\n      };\r\n  }\r\n};\r\n\r\n// Preload critical resources\r\nexport const preloadResources = () => {\r\n  // Preload audio context\r\n  if (typeof window !== 'undefined' && window.AudioContext) {\r\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n    // Suspend immediately to avoid auto-play issues\r\n    audioContext.suspend();\r\n  }\r\n};\r\n\r\n// Memory management utilities\r\nexport const createMemoryManager = () => {\r\n  const cache = new Map();\r\n  const maxCacheSize = 50;\r\n  \r\n  return {\r\n    set: (key, value) => {\r\n      if (cache.size >= maxCacheSize) {\r\n        const firstKey = cache.keys().next().value;\r\n        cache.delete(firstKey);\r\n      }\r\n      cache.set(key, value);\r\n    },\r\n    get: (key) => cache.get(key),\r\n    clear: () => cache.clear(),\r\n    size: () => cache.size\r\n  };\r\n};\r\n"],"mappingseY;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAAA,cAAA,GAAAE,CAAA;AAfZ;;AAEA;AACO,MAAMC,QAAQ,GAAGA,CAACC,IAAI,EAAEC,IAAI,KAAK;EAAA;EAAAL,cAAA,GAAAM,CAAA;EACtC,IAAIC,OAAO;EAAC;EAAAP,cAAA,GAAAE,CAAA;EACZ,OAAO,SAASM,gBAAgBA,CAAC,GAAGC,IAAI,EAAE;IAAA;IAAAT,cAAA,GAAAM,CAAA;IAAAN,cAAA,GAAAE,CAAA;IACxC,MAAMQ,KAAK,GAAGA,CAAA,KAAM;MAAA;MAAAV,cAAA,GAAAM,CAAA;MAAAN,cAAA,GAAAE,CAAA;MAClBS,YAAY,CAACJ,OAAO,CAAC;MAAC;MAAAP,cAAA,GAAAE,CAAA;MACtBE,IAAI,CAAC,GAAGK,IAAI,CAAC;IACf,CAAC;IAAC;IAAAT,cAAA,GAAAE,CAAA;IACFS,YAAY,CAACJ,OAAO,CAAC;IAAC;IAAAP,cAAA,GAAAE,CAAA;IACtBK,OAAO,GAAGK,UAAU,CAACF,KAAK,EAAEL,IAAI,CAAC;EACnC,CAAC;AACH,CAAC;;AAED;AAAA;AAAAQ,OAAA,CAAAV,QAAA,GAAAA,QAAA;AAAAH,cAAA,GAAAE,CAAA;AACO,MAAMY,QAAQ,GAAGA,CAACV,IAAI,EAAEW,KAAK,KAAK;EAAA;EAAAf,cAAA,GAAAM,CAAA;EACvC,IAAIU,UAAU;EAAC;EAAAhB,cAAA,GAAAE,CAAA;EACf,OAAO,YAAW;IAAA;IAAAF,cAAA,GAAAM,CAAA;IAChB,MAAMG,IAAI;IAAA;IAAA,CAAAT,cAAA,GAAAE,CAAA,OAAGe,SAAS;IACtB,MAAMC,OAAO;IAAA;IAAA,CAAAlB,cAAA,GAAAE,CAAA,QAAG,IAAI;IAAC;IAAAF,cAAA,GAAAE,CAAA;IACrB,IAAI,CAACc,UAAU,EAAE;MAAA;MAAAhB,cAAA,GAAAmB,CAAA;MAAAnB,cAAA,GAAAE,CAAA;MACfE,IAAI,CAACgB,KAAK,CAACF,OAAO,EAAET,IAAI,CAAC;MAAC;MAAAT,cAAA,GAAAE,CAAA;MAC1Bc,UAAU,GAAG,IAAI;MAAC;MAAAhB,cAAA,GAAAE,CAAA;MAClBU,UAAU,CAAC,MAAM;QAAA;QAAAZ,cAAA,GAAAM,CAAA;QAAAN,cAAA,GAAAE,CAAA;QAAA,OAAAc,UAAU,GAAG,KAAK;MAAD,CAAC,EAAED,KAAK,CAAC;IAC7C,CAAC;IAAA;IAAA;MAAAf,cAAA,GAAAmB,CAAA;IAAA;EACH,CAAC;AACH,CAAC;;AAED;AAAA;AAAAN,OAAA,CAAAC,QAAA,GAAAA,QAAA;AAAAd,cAAA,GAAAE,CAAA;AACO,MAAMmB,OAAO,GAAIC,EAAE,IAAK;EAAA;EAAAtB,cAAA,GAAAM,CAAA;EAC7B,MAAMiB,KAAK;EAAA;EAAA,CAAAvB,cAAA,GAAAE,CAAA,QAAG,IAAIsB,GAAG,CAAC,CAAC;EAAC;EAAAxB,cAAA,GAAAE,CAAA;EACxB,OAAO,CAAC,GAAGO,IAAI,KAAK;IAAA;IAAAT,cAAA,GAAAM,CAAA;IAClB,MAAMmB,GAAG;IAAA;IAAA,CAAAzB,cAAA,GAAAE,CAAA,QAAGwB,IAAI,CAACC,SAAS,CAAClB,IAAI,CAAC;IAAC;IAAAT,cAAA,GAAAE,CAAA;IACjC,IAAIqB,KAAK,CAACK,GAAG,CAACH,GAAG,CAAC,EAAE;MAAA;MAAAzB,cAAA,GAAAmB,CAAA;MAAAnB,cAAA,GAAAE,CAAA;MAClB,OAAOqB,KAAK,CAACM,GAAG,CAACJ,GAAG,CAAC;IACvB,CAAC;IAAA;IAAA;MAAAzB,cAAA,GAAAmB,CAAA;IAAA;IACD,MAAMW,MAAM;IAAA;IAAA,CAAA9B,cAAA,GAAAE,CAAA,QAAGoB,EAAE,CAAC,GAAGb,IAAI,CAAC;IAAC;IAAAT,cAAA,GAAAE,CAAA;IAC3BqB,KAAK,CAACQ,GAAG,CAACN,GAAG,EAAEK,MAAM,CAAC;IAAC;IAAA9B,cAAA,GAAAE,CAAA;IACvB,OAAO4B,MAAM;EACf,CAAC;AACH,CAAC;;AAED;AAAA;AAAAjB,OAAA,CAAAQ,OAAA,GAAAA,OAAA;AAAArB,cAAA,GAAAE,CAAA;AACO,MAAM8B,4BAA4B,GAAGA,CAAA,KAAM;EAAA;EAAAhC,cAAA,GAAAM,CAAA;EAChD,MAAM2B,MAAM;EAAA;EAAA,CAAAjC,cAAA,GAAAE,CAAA,QAAGgC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EAC/C,MAAMC,EAAE;EAAA;EAAA,CAAApC,cAAA,GAAAE,CAAA;EAAG;EAAA,CAAAF,cAAA,GAAAmB,CAAA,UAAAc,MAAM,CAACI,UAAU,CAAC,OAAO,CAAC;EAAA;EAAA,CAAArC,cAAA,GAAAmB,CAAA,UAAIc,MAAM,CAACI,UAAU,CAAC,oBAAoB,CAAC;EAAC;EAAArC,cAAA,GAAAE,CAAA;EACjF,OAAO,CAAC,CAACkC,EAAE;AACb,CAAC;;AAED;AAAA;AAAAvB,OAAA,CAAAmB,4BAAA,GAAAA,4BAAA;AAAAhC,cAAA,GAAAE,CAAA;AACO,MAAMoC,wBAAwB,GAAGA,CAAA,KAAM;EAAA;EAAAtC,cAAA,GAAAM,CAAA;EAC5C,MAAM2B,MAAM;EAAA;EAAA,CAAAjC,cAAA,GAAAE,CAAA,QAAGgC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EAC/C,MAAMC,EAAE;EAAA;EAAA,CAAApC,cAAA,GAAAE,CAAA;EAAG;EAAA,CAAAF,cAAA,GAAAmB,CAAA,UAAAc,MAAM,CAACI,UAAU,CAAC,OAAO,CAAC;EAAA;EAAA,CAAArC,cAAA,GAAAmB,CAAA,UAAIc,MAAM,CAACI,UAAU,CAAC,oBAAoB,CAAC;EAAC;EAAArC,cAAA,GAAAE,CAAA;EAEjF,IAAI,CAACkC,EAAE,EAAE;IAAA;IAAApC,cAAA,GAAAmB,CAAA;IAAAnB,cAAA,GAAAE,CAAA;IAAA,OAAO,KAAK;EAAA,CAAC;EAAA;EAAA;IAAAF,cAAA,GAAAmB,CAAA;EAAA;EAEtB,MAAMoB,SAAS;EAAA;EAAA,CAAAvC,cAAA,GAAAE,CAAA,QAAGkC,EAAE,CAACI,YAAY,CAAC,2BAA2B,CAAC;EAAC;EAAAxC,cAAA,GAAAE,CAAA;EAC/D,IAAIqC,SAAS,EAAE;IAAA;IAAAvC,cAAA,GAAAmB,CAAA;IACb,MAAMsB,QAAQ;IAAA;IAAA,CAAAzC,cAAA,GAAAE,CAAA,QAAGkC,EAAE,CAACM,YAAY,CAACH,SAAS,CAACI,uBAAuB,CAAC;IACnE;IAAA;IAAA3C,cAAA,GAAAE,CAAA;IACA;IAAI;IAAA,CAAAF,cAAA,GAAAmB,CAAA,UAAAsB,QAAQ,CAACG,QAAQ,CAAC,QAAQ,CAAC;IAAA;IAAA,CAAA5C,cAAA,GAAAmB,CAAA,UAAIsB,QAAQ,CAACG,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAA,CAAA5C,cAAA,GAAAmB,CAAA,UAAIsB,QAAQ,CAACG,QAAQ,CAAC,YAAY,CAAC,GAAE;MAAA;MAAA5C,cAAA,GAAAmB,CAAA;MAAAnB,cAAA,GAAAE,CAAA;MAC9F,OAAO,MAAM;IACf,CAAC;IAAA;IAAA;MAAAF,cAAA,GAAAmB,CAAA;IAAA;EACH,CAAC;EAAA;EAAA;IAAAnB,cAAA,GAAAmB,CAAA;EAAA;;EAED;EAAAnB,cAAA,GAAAE,CAAA;EACA;EAAI;EAAA,CAAAF,cAAA,GAAAmB,CAAA,UAAA0B,SAAS,CAACC,YAAY;EAAA;EAAA,CAAA9C,cAAA,GAAAmB,CAAA,UAAI0B,SAAS,CAACC,YAAY,IAAI,CAAC,GAAE;IAAA;IAAA9C,cAAA,GAAAmB,CAAA;IAAAnB,cAAA,GAAAE,CAAA;IACzD,OAAO,QAAQ;EACjB,CAAC;EAAA;EAAA;IAAAF,cAAA,GAAAmB,CAAA;EAAA;EAAAnB,cAAA,GAAAE,CAAA;EAED,OAAO,KAAK;AACd,CAAC;;AAED;AAAA;AAAAW,OAAA,CAAAyB,wBAAA,GAAAA,wBAAA;AAAAtC,cAAA,GAAAE,CAAA;AACO,MAAM6C,6BAA6B,GAAGA,CAAA,KAAM;EAAA;EAAA/C,cAAA,GAAAM,CAAA;EACjD,MAAM0C,eAAe;EAAA;EAAA,CAAAhD,cAAA,GAAAE,CAAA,QAAGoC,wBAAwB,CAAC,CAAC;EAAC;EAAAtC,cAAA,GAAAE,CAAA;EAEnD,QAAQ8C,eAAe;IACrB,KAAK,MAAM;MAAA;MAAAhD,cAAA,GAAAmB,CAAA;MAAAnB,cAAA,GAAAE,CAAA;MACT,OAAO;QACL+C,mBAAmB,EAAE,EAAE;QACvBC,gBAAgB,EAAE,MAAM;QACxBC,eAAe,EAAE,IAAI;QACrBC,aAAa,EAAE;MACjB,CAAC;IACH,KAAK,QAAQ;MAAA;MAAApD,cAAA,GAAAmB,CAAA;MAAAnB,cAAA,GAAAE,CAAA;MACX,OAAO;QACL+C,mBAAmB,EAAE,EAAE;QACvBC,gBAAgB,EAAE,QAAQ;QAC1BC,eAAe,EAAE,IAAI;QACrBC,aAAa,EAAE;MACjB,CAAC;IACH,KAAK,KAAK;MAAA;MAAApD,cAAA,GAAAmB,CAAA;IACV;MAAA;MAAAnB,cAAA,GAAAmB,CAAA;MAAAnB,cAAA,GAAAE,CAAA;MACE,OAAO;QACL+C,mBAAmB,EAAE,CAAC;QACtBC,gBAAgB,EAAE,KAAK;QACvBC,eAAe,EAAE,KAAK;QACtBC,aAAa,EAAE;MACjB,CAAC;EACL;AACF,CAAC;;AAED;AAAA;AAAAvC,OAAA,CAAAkC,6BAAA,GAAAA,6BAAA;AAAA/C,cAAA,GAAAE,CAAA;AACO,MAAMmD,gBAAgB,GAAGA,CAAA,KAAM;EAAA;EAAArD,cAAA,GAAAM,CAAA;EAAAN,cAAA,GAAAE,CAAA;EACpC;EACA;EAAI;EAAA,CAAAF,cAAA,GAAAmB,CAAA,kBAAOmC,MAAM,KAAK,WAAW;EAAA;EAAA,CAAAtD,cAAA,GAAAmB,CAAA,WAAImC,MAAM,CAACC,YAAY,GAAE;IAAA;IAAAvD,cAAA,GAAAmB,CAAA;IACxD,MAAMqC,YAAY;IAAA;IAAA,CAAAxD,cAAA,GAAAE,CAAA,QAAG;IAAK;IAAA,CAAAF,cAAA,GAAAmB,CAAA,WAAAmC,MAAM,CAACC,YAAY;IAAA;IAAA,CAAAvD,cAAA,GAAAmB,CAAA,WAAImC,MAAM,CAACG,kBAAkB,GAAE,CAAC;IAC7E;IAAA;IAAAzD,cAAA,GAAAE,CAAA;IACAsD,YAAY,CAACE,OAAO,CAAC,CAAC;EACxB,CAAC;EAAA;EAAA;IAAA1D,cAAA,GAAAmB,CAAA;EAAA;AACH,CAAC;;AAED;AAAA;AAAAN,OAAA,CAAAwC,gBAAA,GAAAA,gBAAA;AAAArD,cAAA,GAAAE,CAAA;AACO,MAAMyD,mBAAmB,GAAGA,CAAA,KAAM;EAAA;EAAA3D,cAAA,GAAAM,CAAA;EACvC,MAAMiB,KAAK;EAAA;EAAA,CAAAvB,cAAA,GAAAE,CAAA,QAAG,IAAIsB,GAAG,CAAC,CAAC;EACvB,MAAMoC,YAAY;EAAA;EAAA,CAAA5D,cAAA,GAAAE,CAAA,QAAG,EAAE;EAAC;EAAAF,cAAA,GAAAE,CAAA;EAExB,OAAO;IACL6B,GAAG,EAAEA,CAACN,GAAG,EAAEoC,KAAK,KAAK;MAAA;MAAA7D,cAAA,GAAAM,CAAA;MAAAN,cAAA,GAAAE,CAAA;MACnB,IAAIqB,KAAK,CAACuC,IAAI,IAAIF,YAAY,EAAE;QAAA;QAAA5D,cAAA,GAAAmB,CAAA;QAC9B,MAAM4C,QAAQ;QAAA;QAAA,CAAA/D,cAAA,GAAAE,CAAA,QAAGqB,KAAK,CAACyC,IAAI,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAACJ,KAAK;QAAC;QAAA7D,cAAA,GAAAE,CAAA;QAC3CqB,KAAK,CAAC2C,MAAM,CAACH,QAAQ,CAAC;MACxB,CAAC;MAAA;MAAA;QAAA/D,cAAA,GAAAmB,CAAA;MAAA;MAAAnB,cAAA,GAAAE,CAAA;MACDqB,KAAK,CAACQ,GAAG,CAACN,GAAG,EAAEoC,KAAK,CAAC;IACvB,CAAC;IACDhC,GAAG,EAAGJ,GAAG,IAAK;MAAA;MAAAzB,cAAA,GAAAM,CAAA;MAAAN,cAAA,GAAAE,CAAA;MAAA,OAAAqB,KAAK,CAACM,GAAG,CAACJ,GAAG,CAAC;IAAD,CAAC;IAC5B0C,KAAK,EAAEA,CAAA,KAAM;MAAA;MAAAnE,cAAA,GAAAM,CAAA;MAAAN,cAAA,GAAAE,CAAA;MAAA,OAAAqB,KAAK,CAAC4C,KAAK,CAAC,CAAC;IAAD,CAAC;IAC1BL,IAAI,EAAEA,CAAA,KAAM;MAAA;MAAA9D,cAAA,GAAAM,CAAA;MAAAN,cAAA,GAAAE,CAAA;MAAA,OAAAqB,KAAK,CAACuC,IAAI;IAAD;EACvB,CAAC;AACH,CAAC;AAAC;AAAAjD,OAAA,CAAA8C,mBAAA,GAAAA,mBAAA","ignoreList":[]}