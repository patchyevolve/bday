22f4bbf75330050bf2a79271268f82b4
"use strict";

var _react = _interopRequireDefault(require("react"));
var _react2 = require("@testing-library/react");
var _FloatingHeartsBackground = _interopRequireDefault(require("../../components/FloatingHeartsBackground"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
describe('FloatingHeartsBackground', () => {
  it('renders the correct number of hearts', () => {
    (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_FloatingHeartsBackground.default, {
      heartCount: 5
    }));

    // Check that hearts are rendered (they should be in the DOM)
    const hearts = document.querySelectorAll('.floating-heart');
    expect(hearts).toHaveLength(5);
  });
  it('applies custom props correctly', () => {
    (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_FloatingHeartsBackground.default, {
      heartCount: 3,
      opacity: 0.5,
      size: "w-8 h-8",
      color: "text-blue-300"
    }));
    const hearts = document.querySelectorAll('.floating-heart');
    expect(hearts).toHaveLength(3);

    // Check that custom classes are applied
    hearts.forEach(heart => {
      expect(heart).toHaveClass('w-8', 'h-8', 'text-blue-300');
    });
  });
  it('uses default props when not provided', () => {
    (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_FloatingHeartsBackground.default, {}));
    const hearts = document.querySelectorAll('.floating-heart');
    expect(hearts).toHaveLength(12); // Default heartCount

    // Check default classes
    hearts.forEach(heart => {
      expect(heart).toHaveClass('w-5', 'h-5', 'text-pink-200');
    });
  });
  it('generates stable positions on re-render', () => {
    const {
      rerender
    } = (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_FloatingHeartsBackground.default, {
      heartCount: 2
    }));
    const firstRenderHearts = document.querySelectorAll('.floating-heart');
    const firstPositions = Array.from(firstRenderHearts).map(heart => heart.parentElement.style.left);

    // Re-render with same props
    rerender(/*#__PURE__*/(0, _jsxRuntime.jsx)(_FloatingHeartsBackground.default, {
      heartCount: 2
    }));
    const secondRenderHearts = document.querySelectorAll('.floating-heart');
    const secondPositions = Array.from(secondRenderHearts).map(heart => heart.parentElement.style.left);

    // Positions should be the same (stable)
    expect(firstPositions).toEqual(secondPositions);
  });
  it('applies animation styles correctly', () => {
    (0, _react2.render)(/*#__PURE__*/(0, _jsxRuntime.jsx)(_FloatingHeartsBackground.default, {
      heartCount: 1,
      animationDuration: 6,
      pulseDuration: 8
    }));
    const heartContainer = document.querySelector('.absolute.pointer-events-none');
    expect(heartContainer).toHaveStyle({
      animation: 'heartFloat 6s ease-in-out infinite'
    });
    const heart = document.querySelector('.floating-heart');
    expect(heart).toHaveStyle({
      animation: 'heartPulse 8s ease-in-out infinite'
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,