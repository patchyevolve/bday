{"version":3,"names":["cov_1saqpwvg6u","actualCoverage","useRef","useCallback","useEffect","GAME_CONFIG","s","useGameLoop","gameStarted","gameOver","gameCompleted","tilesSpawned","endlessMode","activePowerUps","happyBirthdayNotes","onSpawnTile","onUpdateTiles","onUpdatePowerUps","onSpawnPowerUp","onLoseLife","onGameOver","f","gameLoopRef","lastTileSpawnRef","animationFrameRef","gameLoop","b","currentTime","Date","now","baseInterval","slowMotion","active","BASE_SPAWN_INTERVAL","spawnInterval","Math","max","MIN_SPAWN_INTERVAL","shouldSpawn","length","current","noteIndex","newTile","id","random","note","column","floor","y","speed","BASE_TILE_SPEED","spawned","prevTiles","map","tile","filter","DANGER_ZONE_HEIGHT","invincible","requestAnimationFrame","cancelAnimationFrame","startGameLoop","stopGameLoop"],"sources":["useGameLoop.js"],"sourcesContent":["import { useRef, useCallback, useEffect } from 'react';\r\nimport { GAME_CONFIG } from '../constants/gameData';\r\n\r\nexport const useGameLoop = ({\r\n  gameStarted,\r\n  gameOver,\r\n  gameCompleted,\r\n  tilesSpawned,\r\n  endlessMode,\r\n  activePowerUps,\r\n  happyBirthdayNotes,\r\n  onSpawnTile,\r\n  onUpdateTiles,\r\n  onUpdatePowerUps,\r\n  onSpawnPowerUp,\r\n  onLoseLife,\r\n  onGameOver\r\n}) => {\r\n  const gameLoopRef = useRef(null);\r\n  const lastTileSpawnRef = useRef(0);\r\n  const animationFrameRef = useRef(null);\r\n\r\n  const gameLoop = useCallback(() => {\r\n    if (!gameStarted || gameOver || gameCompleted) return;\r\n\r\n    const currentTime = Date.now();\r\n    \r\n    // Spawn new tiles with dynamic timing\r\n    const baseInterval = activePowerUps.slowMotion.active ? 2500 : GAME_CONFIG.BASE_SPAWN_INTERVAL;\r\n    const spawnInterval = Math.max(baseInterval - (tilesSpawned * 100), GAME_CONFIG.MIN_SPAWN_INTERVAL);\r\n    \r\n    // In endless mode, keep spawning tiles indefinitely\r\n    const shouldSpawn = endlessMode ? true : tilesSpawned < happyBirthdayNotes.length;\r\n    \r\n    if (currentTime - lastTileSpawnRef.current > spawnInterval && shouldSpawn) {\r\n      const noteIndex = endlessMode ? tilesSpawned % happyBirthdayNotes.length : tilesSpawned;\r\n      const newTile = {\r\n        id: Date.now() + Math.random(),\r\n        note: happyBirthdayNotes[noteIndex],\r\n        column: Math.floor(Math.random() * 4),\r\n        y: -80,\r\n        speed: activePowerUps.slowMotion.active ? \r\n          (2 + Math.floor(tilesSpawned / 5)) : \r\n          (GAME_CONFIG.BASE_TILE_SPEED + Math.floor(tilesSpawned / 3)),\r\n        noteIndex: noteIndex,\r\n        spawned: true\r\n      };\r\n      \r\n      onSpawnTile(newTile);\r\n      lastTileSpawnRef.current = currentTime;\r\n      \r\n      // Chance to spawn power-up\r\n      onSpawnPowerUp();\r\n    }\r\n\r\n    // Update tile positions\r\n    onUpdateTiles((prevTiles) => {\r\n      return prevTiles.map(tile => ({\r\n        ...tile,\r\n        y: tile.y + tile.speed\r\n      })).filter(tile => {\r\n        // Remove tiles that hit bottom (lose life unless invincible)\r\n        if (tile.y > GAME_CONFIG.DANGER_ZONE_HEIGHT) {\r\n          if (!activePowerUps.invincible.active) {\r\n            onLoseLife();\r\n          }\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n    });\r\n\r\n    // Update power-up positions\r\n    onUpdatePowerUps();\r\n\r\n    // Schedule next frame\r\n    animationFrameRef.current = requestAnimationFrame(gameLoop);\r\n  }, [\r\n    gameStarted, \r\n    gameOver, \r\n    gameCompleted, \r\n    tilesSpawned, \r\n    endlessMode, \r\n    activePowerUps, \r\n    happyBirthdayNotes,\r\n    onSpawnTile,\r\n    onUpdateTiles,\r\n    onUpdatePowerUps,\r\n    onSpawnPowerUp,\r\n    onLoseLife\r\n  ]);\r\n\r\n  // Start game loop when game starts\r\n  useEffect(() => {\r\n    if (gameStarted && !gameOver && !gameCompleted) {\r\n      // Use requestAnimationFrame for smooth 60fps performance\r\n      animationFrameRef.current = requestAnimationFrame(gameLoop);\r\n    }\r\n    \r\n    return () => {\r\n      if (animationFrameRef.current) {\r\n        cancelAnimationFrame(animationFrameRef.current);\r\n      }\r\n    };\r\n  }, [gameStarted, gameOver, gameCompleted, gameLoop]);\r\n\r\n  // Handle game over when lives reach 0\r\n  useEffect(() => {\r\n    if (gameOver) {\r\n      onGameOver();\r\n    }\r\n  }, [gameOver, onGameOver]);\r\n\r\n  return {\r\n    startGameLoop: () => {\r\n      if (!animationFrameRef.current) {\r\n        animationFrameRef.current = requestAnimationFrame(gameLoop);\r\n      }\r\n    },\r\n    stopGameLoop: () => {\r\n      if (animationFrameRef.current) {\r\n        cancelAnimationFrame(animationFrameRef.current);\r\n        animationFrameRef.current = null;\r\n      }\r\n    }\r\n  };\r\n};\r\n"],"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","ignoreList":[]}