{"version":3,"names":["cov_umy2x27iw","actualCoverage","useRef","useCallback","useEffect","createMemoryManager","s","usePerformanceOptimizedAudio","f","audioContextRef","activeOscillatorsRef","backgroundMusicRef","memoryManager","audioPool","maxPoolSize","initAudioContext","current","b","window","AudioContext","webkitAudioContext","state","resume","createAudioPool","audioContext","i","oscillator","createOscillator","gainNode","createGain","connect","destination","push","inUse","getPooledAudio","available","find","item","returnToPool","audioItem","gain","cancelScheduledValues","frequency","playNote","duration","playNoteWithAudio","setTimeout","error","console","log","setValueAtTime","currentTime","type","now","linearRampToValueAtTime","exponentialRampToValueAtTime","start","stop","onended","filter","osc","playWelcomeMusic","cacheKey","cached","get","playGentleChord","frequencies","delay","forEach","freq","set","playBackgroundMusic","happyBirthdayNotes","clearTimeout","playMelodyNote","noteIndex","length","note","stopBackgroundMusic","e","close","clear"],"sources":["usePerformanceOptimizedAudio.js"],"sourcesContent":["import { useRef, useCallback, useEffect } from 'react';\r\nimport { createMemoryManager } from '../utils/performance';\r\n\r\nexport const usePerformanceOptimizedAudio = () => {\r\n  const audioContextRef = useRef(null);\r\n  const activeOscillatorsRef = useRef([]);\r\n  const backgroundMusicRef = useRef(null);\r\n  const memoryManager = useRef(createMemoryManager());\r\n  const audioPool = useRef([]);\r\n  const maxPoolSize = 10;\r\n\r\n  // Initialize audio context with performance optimizations\r\n  const initAudioContext = useCallback(() => {\r\n    if (!audioContextRef.current) {\r\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n      \r\n      // Optimize audio context for better performance\r\n      if (audioContextRef.current.state === 'suspended') {\r\n        audioContextRef.current.resume();\r\n      }\r\n    }\r\n    return audioContextRef.current;\r\n  }, []);\r\n\r\n  // Create audio pool for better performance\r\n  const createAudioPool = useCallback(() => {\r\n    const audioContext = initAudioContext();\r\n    for (let i = 0; i < maxPoolSize; i++) {\r\n      const oscillator = audioContext.createOscillator();\r\n      const gainNode = audioContext.createGain();\r\n      oscillator.connect(gainNode);\r\n      gainNode.connect(audioContext.destination);\r\n      \r\n      audioPool.current.push({\r\n        oscillator,\r\n        gainNode,\r\n        inUse: false\r\n      });\r\n    }\r\n  }, [initAudioContext]);\r\n\r\n  // Get available audio from pool\r\n  const getPooledAudio = useCallback(() => {\r\n    const available = audioPool.current.find(item => !item.inUse);\r\n    if (available) {\r\n      available.inUse = true;\r\n      return available;\r\n    }\r\n    return null;\r\n  }, []);\r\n\r\n  // Return audio to pool\r\n  const returnToPool = useCallback((audioItem) => {\r\n    if (audioItem) {\r\n      audioItem.inUse = false;\r\n      // Reset audio properties\r\n      audioItem.gainNode.gain.cancelScheduledValues(0);\r\n      audioItem.oscillator.frequency.cancelScheduledValues(0);\r\n    }\r\n  }, []);\r\n\r\n  // Optimized note playing with pooling\r\n  const playNote = useCallback((frequency, duration = 300) => {\r\n    try {\r\n      const audioContext = initAudioContext();\r\n      const audioItem = getPooledAudio();\r\n      \r\n      if (!audioItem) {\r\n        // Fallback to creating new audio if pool is empty\r\n        const oscillator = audioContext.createOscillator();\r\n        const gainNode = audioContext.createGain();\r\n        oscillator.connect(gainNode);\r\n        gainNode.connect(audioContext.destination);\r\n        \r\n        playNoteWithAudio(oscillator, gainNode, frequency, duration, audioContext);\r\n        return;\r\n      }\r\n\r\n      const { oscillator, gainNode } = audioItem;\r\n      playNoteWithAudio(oscillator, gainNode, frequency, duration, audioContext);\r\n      \r\n      // Return to pool after duration\r\n      setTimeout(() => {\r\n        returnToPool(audioItem);\r\n      }, duration + 100);\r\n      \r\n    } catch (error) {\r\n      console.log('Audio playback failed:', error);\r\n    }\r\n  }, [initAudioContext, getPooledAudio, returnToPool]);\r\n\r\n  // Helper function to play note with given audio components\r\n  const playNoteWithAudio = useCallback((oscillator, gainNode, frequency, duration, audioContext) => {\r\n    oscillator.frequency.setValueAtTime(frequency, audioContext.currentTime);\r\n    oscillator.type = 'sine';\r\n    \r\n    const now = audioContext.currentTime;\r\n    \r\n    // Optimized ADSR envelope\r\n    gainNode.gain.setValueAtTime(0, now);\r\n    gainNode.gain.linearRampToValueAtTime(0.15, now + 0.01);\r\n    gainNode.gain.exponentialRampToValueAtTime(0.05, now + 0.1);\r\n    gainNode.gain.setValueAtTime(0.05, now + duration / 1000 - 0.1);\r\n    gainNode.gain.exponentialRampToValueAtTime(0.0001, now + duration / 1000);\r\n\r\n    oscillator.start(now);\r\n    oscillator.stop(now + duration / 1000);\r\n    \r\n    // Add to active oscillators for cleanup\r\n    activeOscillatorsRef.current.push(oscillator);\r\n    \r\n    // Remove from active array when note ends\r\n    oscillator.onended = () => {\r\n      activeOscillatorsRef.current = activeOscillatorsRef.current.filter(osc => osc !== oscillator);\r\n    };\r\n  }, []);\r\n\r\n  // Optimized welcome music with caching\r\n  const playWelcomeMusic = useCallback(() => {\r\n    const cacheKey = 'welcome_music';\r\n    const cached = memoryManager.current.get(cacheKey);\r\n    \r\n    if (cached) {\r\n      // Use cached version\r\n      return;\r\n    }\r\n\r\n    const audioContext = initAudioContext();\r\n    \r\n    const playGentleChord = (frequencies, delay = 0) => {\r\n      setTimeout(() => {\r\n        frequencies.forEach((freq) => {\r\n          const audioItem = getPooledAudio();\r\n          if (audioItem) {\r\n            const { oscillator, gainNode } = audioItem;\r\n            oscillator.frequency.setValueAtTime(freq, audioContext.currentTime);\r\n            oscillator.type = 'sine';\r\n            \r\n            const now = audioContext.currentTime;\r\n            gainNode.gain.setValueAtTime(0, now);\r\n            gainNode.gain.linearRampToValueAtTime(0.05, now + 0.2);\r\n            gainNode.gain.exponentialRampToValueAtTime(0.001, now + 2.5);\r\n            \r\n            oscillator.start(now);\r\n            oscillator.stop(now + 2.5);\r\n            \r\n            setTimeout(() => returnToPool(audioItem), 2500);\r\n          }\r\n        });\r\n      }, delay);\r\n    };\r\n\r\n    // Play melody\r\n    playGentleChord([261.63, 329.63, 392.00], 0);\r\n    playGentleChord([293.66, 369.99, 440.00], 1200);\r\n    playGentleChord([261.63, 329.63, 392.00], 2400);\r\n    \r\n    // Cache this music\r\n    memoryManager.current.set(cacheKey, true);\r\n  }, [initAudioContext, getPooledAudio, returnToPool, memoryManager]);\r\n\r\n  // Optimized background music\r\n  const playBackgroundMusic = useCallback((happyBirthdayNotes) => {\r\n    const audioContext = initAudioContext();\r\n\r\n    // Stop any existing background music\r\n    if (backgroundMusicRef.current) {\r\n      clearTimeout(backgroundMusicRef.current);\r\n    }\r\n\r\n    const playMelodyNote = (noteIndex = 0) => {\r\n      if (noteIndex >= happyBirthdayNotes.length) {\r\n        backgroundMusicRef.current = setTimeout(() => playMelodyNote(0), 2000);\r\n        return;\r\n      }\r\n\r\n      const note = happyBirthdayNotes[noteIndex];\r\n      const audioItem = getPooledAudio();\r\n      \r\n      if (audioItem) {\r\n        const { oscillator, gainNode } = audioItem;\r\n        \r\n        oscillator.frequency.setValueAtTime(note.frequency, audioContext.currentTime);\r\n        oscillator.type = 'sine';\r\n\r\n        const now = audioContext.currentTime;\r\n        \r\n        // Softer background music volume\r\n        gainNode.gain.setValueAtTime(0, now);\r\n        gainNode.gain.linearRampToValueAtTime(0.08, now + 0.05);\r\n        gainNode.gain.exponentialRampToValueAtTime(0.04, now + 0.2);\r\n        gainNode.gain.setValueAtTime(0.04, now + note.duration / 1000 - 0.1);\r\n        gainNode.gain.exponentialRampToValueAtTime(0.0001, now + note.duration / 1000);\r\n\r\n        oscillator.start(now);\r\n        oscillator.stop(now + note.duration / 1000);\r\n\r\n        // Return to pool after note\r\n        setTimeout(() => returnToPool(audioItem), note.duration + 100);\r\n      }\r\n\r\n      // Schedule next note\r\n      backgroundMusicRef.current = setTimeout(() => playMelodyNote(noteIndex + 1), note.duration);\r\n    };\r\n\r\n    playMelodyNote(0);\r\n  }, [initAudioContext, getPooledAudio, returnToPool]);\r\n\r\n  // Stop background music\r\n  const stopBackgroundMusic = useCallback(() => {\r\n    if (backgroundMusicRef.current) {\r\n      clearTimeout(backgroundMusicRef.current);\r\n      backgroundMusicRef.current = null;\r\n    }\r\n  }, []);\r\n\r\n  // Initialize audio pool on mount\r\n  useEffect(() => {\r\n    createAudioPool();\r\n  }, [createAudioPool]);\r\n\r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      // Stop all active oscillators\r\n      activeOscillatorsRef.current.forEach(osc => {\r\n        try {\r\n          osc.stop();\r\n        } catch (e) {\r\n          // Already stopped\r\n        }\r\n      });\r\n      \r\n      // Stop background music\r\n      if (backgroundMusicRef.current) {\r\n        clearTimeout(backgroundMusicRef.current);\r\n      }\r\n      \r\n      // Close audio context\r\n      if (audioContextRef.current && audioContextRef.current.state !== 'closed') {\r\n        audioContextRef.current.close();\r\n      }\r\n      \r\n      // Clear memory\r\n      memoryManager.current.clear();\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    playNote,\r\n    playWelcomeMusic,\r\n    playBackgroundMusic,\r\n    stopBackgroundMusic,\r\n    initAudioContext\r\n  };\r\n};\r\n"],"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","ignoreList":[]}