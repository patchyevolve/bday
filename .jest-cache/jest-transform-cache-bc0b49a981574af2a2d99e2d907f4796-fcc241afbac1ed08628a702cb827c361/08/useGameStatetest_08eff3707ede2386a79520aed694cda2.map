{"version":3,"names":["_react","require","_useGameState","describe","it","result","renderHook","useGameState","expect","current","gameStarted","toBe","gameCompleted","showCelebration","score","lives","combo","maxCombo","act","setGameStarted","setScore","setLives","setCombo","resetGame"],"sources":["useGameState.test.js"],"sourcesContent":["import { renderHook, act } from '@testing-library/react';\r\nimport { useGameState } from '../hooks/useGameState';\r\n\r\ndescribe('useGameState', () => {\r\n  it('should initialize with default values', () => {\r\n    const { result } = renderHook(() => useGameState());\r\n\r\n    expect(result.current.gameStarted).toBe(false);\r\n    expect(result.current.gameCompleted).toBe(false);\r\n    expect(result.current.showCelebration).toBe(false);\r\n    expect(result.current.score).toBe(0);\r\n    expect(result.current.lives).toBe(3);\r\n    expect(result.current.combo).toBe(0);\r\n    expect(result.current.maxCombo).toBe(0);\r\n  });\r\n\r\n  it('should update game state correctly', () => {\r\n    const { result } = renderHook(() => useGameState());\r\n\r\n    act(() => {\r\n      result.current.setGameStarted(true);\r\n    });\r\n\r\n    expect(result.current.gameStarted).toBe(true);\r\n\r\n    act(() => {\r\n      result.current.setScore(100);\r\n    });\r\n\r\n    expect(result.current.score).toBe(100);\r\n  });\r\n\r\n  it('should reset game state correctly', () => {\r\n    const { result } = renderHook(() => useGameState());\r\n\r\n    // Set some state\r\n    act(() => {\r\n      result.current.setGameStarted(true);\r\n      result.current.setScore(100);\r\n      result.current.setLives(1);\r\n      result.current.setCombo(5);\r\n    });\r\n\r\n    // Reset game\r\n    act(() => {\r\n      result.current.resetGame();\r\n    });\r\n\r\n    expect(result.current.gameStarted).toBe(false);\r\n    expect(result.current.score).toBe(0);\r\n    expect(result.current.lives).toBe(3);\r\n    expect(result.current.combo).toBe(0);\r\n  });\r\n});\r\n"],"mappings":";;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,aAAA,GAAAD,OAAA;AAEAE,QAAQ,CAAC,cAAc,EAAE,MAAM;EAC7BC,EAAE,CAAC,uCAAuC,EAAE,MAAM;IAChD,MAAM;MAAEC;IAAO,CAAC,GAAG,IAAAC,iBAAU,EAAC,MAAM,IAAAC,0BAAY,EAAC,CAAC,CAAC;IAEnDC,MAAM,CAACH,MAAM,CAACI,OAAO,CAACC,WAAW,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC;IAC9CH,MAAM,CAACH,MAAM,CAACI,OAAO,CAACG,aAAa,CAAC,CAACD,IAAI,CAAC,KAAK,CAAC;IAChDH,MAAM,CAACH,MAAM,CAACI,OAAO,CAACI,eAAe,CAAC,CAACF,IAAI,CAAC,KAAK,CAAC;IAClDH,MAAM,CAACH,MAAM,CAACI,OAAO,CAACK,KAAK,CAAC,CAACH,IAAI,CAAC,CAAC,CAAC;IACpCH,MAAM,CAACH,MAAM,CAACI,OAAO,CAACM,KAAK,CAAC,CAACJ,IAAI,CAAC,CAAC,CAAC;IACpCH,MAAM,CAACH,MAAM,CAACI,OAAO,CAACO,KAAK,CAAC,CAACL,IAAI,CAAC,CAAC,CAAC;IACpCH,MAAM,CAACH,MAAM,CAACI,OAAO,CAACQ,QAAQ,CAAC,CAACN,IAAI,CAAC,CAAC,CAAC;EACzC,CAAC,CAAC;EAEFP,EAAE,CAAC,oCAAoC,EAAE,MAAM;IAC7C,MAAM;MAAEC;IAAO,CAAC,GAAG,IAAAC,iBAAU,EAAC,MAAM,IAAAC,0BAAY,EAAC,CAAC,CAAC;IAEnD,IAAAW,UAAG,EAAC,MAAM;MACRb,MAAM,CAACI,OAAO,CAACU,cAAc,CAAC,IAAI,CAAC;IACrC,CAAC,CAAC;IAEFX,MAAM,CAACH,MAAM,CAACI,OAAO,CAACC,WAAW,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IAE7C,IAAAO,UAAG,EAAC,MAAM;MACRb,MAAM,CAACI,OAAO,CAACW,QAAQ,CAAC,GAAG,CAAC;IAC9B,CAAC,CAAC;IAEFZ,MAAM,CAACH,MAAM,CAACI,OAAO,CAACK,KAAK,CAAC,CAACH,IAAI,CAAC,GAAG,CAAC;EACxC,CAAC,CAAC;EAEFP,EAAE,CAAC,mCAAmC,EAAE,MAAM;IAC5C,MAAM;MAAEC;IAAO,CAAC,GAAG,IAAAC,iBAAU,EAAC,MAAM,IAAAC,0BAAY,EAAC,CAAC,CAAC;;IAEnD;IACA,IAAAW,UAAG,EAAC,MAAM;MACRb,MAAM,CAACI,OAAO,CAACU,cAAc,CAAC,IAAI,CAAC;MACnCd,MAAM,CAACI,OAAO,CAACW,QAAQ,CAAC,GAAG,CAAC;MAC5Bf,MAAM,CAACI,OAAO,CAACY,QAAQ,CAAC,CAAC,CAAC;MAC1BhB,MAAM,CAACI,OAAO,CAACa,QAAQ,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC;;IAEF;IACA,IAAAJ,UAAG,EAAC,MAAM;MACRb,MAAM,CAACI,OAAO,CAACc,SAAS,CAAC,CAAC;IAC5B,CAAC,CAAC;IAEFf,MAAM,CAACH,MAAM,CAACI,OAAO,CAACC,WAAW,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC;IAC9CH,MAAM,CAACH,MAAM,CAACI,OAAO,CAACK,KAAK,CAAC,CAACH,IAAI,CAAC,CAAC,CAAC;IACpCH,MAAM,CAACH,MAAM,CAACI,OAAO,CAACM,KAAK,CAAC,CAACJ,IAAI,CAAC,CAAC,CAAC;IACpCH,MAAM,CAACH,MAAM,CAACI,OAAO,CAACO,KAAK,CAAC,CAACL,IAAI,CAAC,CAAC,CAAC;EACtC,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}